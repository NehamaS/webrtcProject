declare type LabelValues<T extends string> = Partial<Record<T, string | number>>;
declare const getValueAsString: (value: number) => number | string;
declare const getLabels: (labelNames: Array<string>, args: Array<string>) => unknown;
declare const isObject: (obj: typeof Object | LabelValues<string>) => boolean;
declare const validateMetricName: (name: string) => boolean;
declare const validateLabelName: (names: string[]) => boolean;
declare const validateLabel: (savedLabels: string | string[], labels: Partial<Record<string, string | number>>) => void;
declare const escapeString: (str: string) => string;
declare const escapeLabelValue: (str: string) => string;
export { getValueAsString, isObject, validateMetricName, validateLabelName, validateLabel, getLabels, escapeString, escapeLabelValue, };
