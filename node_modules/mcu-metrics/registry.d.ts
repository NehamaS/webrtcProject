import { Persist } from 'mcu-persitence-service/persistance/persist';
interface metric {
    name: string;
    help: string;
    value: number;
    values?: any;
    type?: string;
    labelNames?: unknown;
    labels?: any;
}
declare class Registry {
    _metrics: Array<string | Object>;
    _defaultLabels: any;
    prefix: string;
    db: Persist;
    ttl: number;
    constructor();
    setDB(db: Persist): void;
    update(name: string, options: metric): Promise<void>;
    remove(name: string): Promise<void>;
    getValue(name: string): Promise<number>;
    setDefaultLabels(labels: string[]): void;
    getSingleMetric(name: string): Promise<metric>;
    getMetricsAsArray(): Promise<metric[]>;
    getMetricAsPrometheusString(item: metric): Promise<string>;
    metrics(): Promise<string>;
}
declare const registry: Registry;
export { registry as Registry, Registry as Register };
