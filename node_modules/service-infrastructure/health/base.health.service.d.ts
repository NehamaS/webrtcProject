import { HealthCheckResult, HealthCheckService, HealthIndicator } from '@nestjs/terminus';
import { ConfigurationService } from '../common/config/configuration.service';
import { MculoggerService } from "../common/logs/mculogger.service";
import { IHealth, ProbType } from "./health.def";
import { OnApplicationBootstrap, OnApplicationShutdown } from '@nestjs/common';
export declare abstract class BaseHealthService extends HealthIndicator implements OnApplicationBootstrap, OnApplicationShutdown {
    protected readonly configService: ConfigurationService;
    protected readonly logger: MculoggerService;
    protected readonly health: HealthCheckService;
    private applicationName;
    private probs;
    private cache;
    private timeout;
    constructor(configService: ConfigurationService, logger: MculoggerService, health: HealthCheckService);
    healthCheck(readFromCache?: boolean): Promise<HealthCheckResult>;
    protected setProbsList(healthProbs?: IHealth[], probType?: ProbType, override?: boolean): void;
    setApplicationName(name: string): string;
    private getApplicationName;
    onApplicationBootstrap(): Promise<void>;
    onApplicationShutdown(signal?: string): any;
}
