import { HealthCheckResult, HealthCheckService } from '@nestjs/terminus';
import { ConfigurationService } from '../common/config/configuration.service';
import { MculoggerService } from "../common/logs/mculogger.service";
import { MemoryRssService } from "./memory/memory.rss.service";
import { DiskService } from "./disk/disk.service";
import { BaseHealthService } from "./base.health.service";
import { DiscoveryService } from "./discovery/discovery.service";
import { IHealth } from "./health.def";
import { CpuService } from "./cpu/cpu.service";
import { ShutdownProbe } from './shutdown.probe';
export declare const NOT_READY = "false";
export declare class ReadyService extends BaseHealthService {
    private readonly memoryRssService;
    private readonly diskService;
    private readonly discoveryService;
    private readonly cpuService;
    private readonly shutdown;
    constructor(memoryRssService: MemoryRssService, diskService: DiskService, discoveryService: DiscoveryService, cpuService: CpuService, configService: ConfigurationService, logger: MculoggerService, health: HealthCheckService, shutdown: ShutdownProbe);
    setProbs(healthProbs?: IHealth[], override?: boolean): void;
    healthCheck(readFromCache?: boolean): Promise<HealthCheckResult>;
}
