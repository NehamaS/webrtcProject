import { ChildClientOptions, StatsCb, StatsD, Tags } from 'hot-shots';
import { MculoggerService } from "../common/logs/mculogger.service";
export interface IncCounterInfo {
    counterName: string;
    organizationId: string;
    accountId: string;
    appSid: string;
    tag?: Tags;
}
export interface CounterInfo extends IncCounterInfo {
    value: number;
}
export declare enum CounterType {
    'gaugeCounter' = "gaugeCounter",
    'incrementCounter' = "incrementCounter",
    'decrementCounter' = "decrementCounter",
    'setCounter' = "setCounter",
    'distributionCounter' = "distributionCounter",
    'histogramCounter' = "histogramCounter",
    'timing' = "timing"
}
export interface Msg {
    counterType: CounterType;
    counter: string;
    bytes?: number;
    error?: string;
}
export declare class MetricsService {
    private readonly metrics;
    private readonly logger;
    constructor(metrics: StatsD, logger: MculoggerService);
    setClient(options: ChildClientOptions): StatsD;
    incrementCounter(incCounterInfo: IncCounterInfo): void;
    decrementCounter(incCounterInfo: IncCounterInfo): void;
    gaugeCounter(counterInfo: CounterInfo): void;
    setCounter(counterInfo: CounterInfo): void;
    distribution(counterInfo: CounterInfo, callback?: StatsCb): void;
    histogram(counterInfo: CounterInfo, callback?: StatsCb): void;
    timing(counterInfo: CounterInfo, callback?: StatsCb): void;
    clientCheck(): void;
    clientClose(): void;
    private analyze;
    private setTags;
}
