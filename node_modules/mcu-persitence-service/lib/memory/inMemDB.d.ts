import { DB, PersistDB, RangeDB } from '../../common/common';
export declare class InMemDB extends DB implements PersistDB {
    private logger;
    private db;
    prfx: string;
    constructor(logger: any, prefix: string);
    /**
     *
     * @param key string, => actual key = 'this.prefix/key'
     * @param value string or object (will be serialized)
     * @param ttl number in seconds or date object. Value must be at least 1 sec in the future
     */
    put: (key: string, value: string | Object, ttl: number | Date) => Promise<boolean>;
    get: (key: string) => Promise<string | Object>;
    range: (rng: RangeDB) => Promise<Array<string | Object>>;
    rangeByPrefix: (keyPrefix: string) => Promise<Array<string | Object>>;
    remove: (key: string) => Promise<boolean>;
}
