import { RegisterCheck, RegisterOptions } from "./lib/common";
import McuDiscovery from "./McuDiscovery";
export declare class Register {
    mcu: McuDiscovery;
    logger: any;
    constructor(mcu: McuDiscovery);
    /**
     * @description Registers a new consul check
     * @param {RegisterCheck} check
     * @returns {Promise<void>}
     * @memberof Register
     */
    createCheck(check: RegisterCheck): Promise<void>;
    /**
     * @description Marks the check as passed and updates the TTL
     * @param {string} [status="warn"]
     * @param {string} id
     * @param {string} [note=""]
     * @returns {Promise<void>}
     * @memberof Register
     */
    updateCheck(id: string, status?: string, note?: string): Promise<void>;
    /**
     * @description Registers a new service.
     * @param {RegisterOptions} options
     * @returns {Promise<void>}
     * @memberof Register
     */
    createService(options: RegisterOptions): Promise<void>;
    private registerServiceByHttp;
    /**
     * @description Deregisters a new service.
     * @param {string} serviceId
     * @returns {Promise<void>}
     * @memberof Register
     */
    deregisterService(serviceId: string): Promise<void>;
    /**
     * @description Deregisters a service check.
     * @returns {Promise<void>}
     * @memberof Register
     * @param checkId
     */
    deregisterCheck(checkId: string): Promise<void>;
}
