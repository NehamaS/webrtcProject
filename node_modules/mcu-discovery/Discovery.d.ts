export declare enum ServiceType {
    SIP_GATEWAY = "sipGw",
    SIP_GATEWAY_NOTIFY = "sipGwNotify",
    MEDIA_GATEWAY = "mediaGw",
    MEDIA_SERVER = "mediaServer",
    MCU_STATS_SERVICE = "stats",
    MCU_MONITOR_SERVICE = "monitor",
    MCU_RECORDER_CONTROLLER = "recorder",
    ETCD = "etcd"
}
export interface DiscoveryEntiry {
    thriftPort?: number;
    httpPort: number;
    httpsPort?: number;
    address?: string;
}
export interface DiscoveryConf {
    name: string;
    type: ServiceType;
    dnsResolve?: boolean;
    ip?: string;
    ttl?: number;
    domainSuffix?: string;
    dev?: {
        enable: boolean;
        services: Array<{
            name: string;
            ids: Array<string>;
        }>;
    };
}
export declare class Discovery {
    private discoveryType;
    private logger;
    constructor(discoveryType: any, logger: any);
    private getSrvThriftPort;
    private getSrvTagValue;
    private getServiceName;
    dnsResolve(domainName: string, port: number, cb: (err: any, result: any) => void): void;
    getServicePorts(serviceType: ServiceType): DiscoveryEntiry;
    getService(serviceConf: DiscoveryConf, id: string, cb: (err: any, result: any) => void): void;
}
