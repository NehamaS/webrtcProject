import { MculoggerService } from 'service-infrastructure/common/logs/mculogger.service';
import { ApiGwFormatDto } from "../../dto/apiGwFormatDto";
import { MessageFactory } from '../sip/massagefactory/message.factory';
import { SipService } from "../sip/sip.service";
import { RequestDTO } from '../sip/common/sipMessageDTO';
import { RestcommDbService } from '../../common/db/restcomm.db.service';
import { ClientMsgHandler } from '../../client.msg.handler';
import { SipUtils } from "../sip/common/sip.utils";
import { DbService } from "../../common/db/db.service";
import { CallService } from "../call.service";
export declare class RestcommService implements CallService {
    private readonly sipService;
    private readonly clientMsgHandler;
    readonly logger: MculoggerService;
    private readonly messageFactory;
    private readonly restcommDbService;
    private readonly dbService;
    private readonly utils;
    constructor(sipService: SipService, clientMsgHandler: ClientMsgHandler, logger: MculoggerService, messageFactory: MessageFactory, restcommDbService: RestcommDbService, dbService: DbService, utils: SipUtils);
    makeCall(request: ApiGwFormatDto): Promise<void>;
    updateCall(request: ApiGwFormatDto): Promise<void>;
    endCall(request: ApiGwFormatDto): Promise<void>;
    createRoom(request: ApiGwFormatDto): Promise<void>;
    closeRoom(request: ApiGwFormatDto): Promise<void>;
    addUser(request: RequestDTO): Promise<void>;
    updateUser(request: RequestDTO): void;
    disconnectUser(request: RequestDTO): Promise<void>;
    cleanRoom(request: RequestDTO): Promise<void>;
    ringingResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    private sendEndCall;
    connectResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    updateResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    private sendAnswer;
    rejectResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    updateRejectResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    private handleRejectResponse;
    endCallResponse(apiGwResponse: ApiGwFormatDto): Promise<void>;
    private buildResponse;
    private buildRequest;
    private buildCaller;
    private buildSipSession;
    private getContact;
}
